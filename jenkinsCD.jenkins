#!groovy
// Run docker build

def dockerRun = 'docker run --name Docker_${BUILD_ID} -d -p 1234:80 ${Docker_image_version}'
def dockerRm = 'sh "docker container stop Docker_${BUILD_ID} && docker container rm Docker_${BUILD_ID}"'
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Docker run") {
            steps {
                echo "============== run docker container =================="
                script {
                    if (env.build_env == 'prod-qa-env') {
                        sshagent(['prod-qa-env']) {
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.91.163 ${dockerRun}"
                        }
                    
                    } else if (env.build_env == 'prod-dev-env') {
                        sshagent(['prod-qa-env']) {
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.91.163 ${dockerRun}"
                        }
                    
                    } else {
                        echo 'Something went wrong'
                    }
                }
                
            }
        }
       stage("Docker test") { 
          steps {
              echo "============== test docker container =================="
              script {
                  if (env.build_env == 'prod-qa-env') {
                        sshagent(['prod-qa-env']) {
                        sh "curl 172.31.91.163:1234"
                        sh "echo 'Test passed'"
                        }
                    
                    } else if (env.build_env == 'prod-dev-env') {
                        sshagent(['prod-qa-env']) {
                        sh "curl 172.31.91.163:1234"
                        sh "echo 'Test passed'"
                        }
                    
                    } else {
                        echo 'Something went wrong'
                    }
              }
          }
      } 
      stage("Stop Docker") {
          steps {
              echo "============== stop&remove docker container =================="
              script {
                  if (env.build_env == 'prod-qa-env') {
                        sshagent(['prod-qa-env']) {
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.91.163 ${dockerRm}"
                        }
                    
                    } else if (env.build_env == 'prod-dev-env') {
                        sshagent(['prod-qa-env']) {
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.91.163 ${dockerRm}"
                        }
                    
                    } else {
                        echo 'Something went wrong'
                    }
              }
          }
      }    
    }
}
